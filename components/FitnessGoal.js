'use client';
import { useState } from 'react';
import jsPDF from 'jspdf';
import { FaArrowRight } from "react-icons/fa6";
import ReactMarkdown from 'react-markdown';

export default function FitnessForm() {
  const [formData, setFormData] = useState({
    age: '',
    gender: '',
    height: '',
    weight: '',
    bodyType: '',
    dietType: '',
    goal: ''
  });
  const [loading, setLoading] = useState(false);
  const [plan, setPlan] = useState('');

  const generatePrompt = (formData) => {
    return `
You're a professional fitness coach. Based on the user's details, create a personalized 7-day fitness and diet plan.

User Details:
- Age: ${formData.age}
- Gender: ${formData.gender}
- Height: ${formData.height} cm
- Weight: ${formData.weight} kg
- Body Type: ${formData.bodyType}
- Diet Preference: ${formData.dietType}
- Fitness Goal: ${formData.goal}

Please provide:
1. Daily workout schedule
2. Meal plan (breakfast, lunch, dinner, snacks)
3. Hydration tips
4. Rest & recovery advice

Make it simple, healthy, and easy to follow.
    `;
  };

  const handleGeneratePlan = async (e) => {
    e.preventDefault();
    setLoading(true)
    const prompt = generatePrompt(formData);

    const res = await fetch('/api/ai-chat', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ prompt })
    });

    const data = await res.json();
    setPlan(data.text);
    setLoading(false)
  };

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({ ...prev, [name]: value }));
  };

  const handleDownloadPDF = () => {
    const doc = new jsPDF('p', 'pt', 'a4');

  const element = document.getElementById('plan-preview'); // The plan container

  const userName = formData.name || 'User';
  const generationDate = new Date().toLocaleDateString();

  // Create a hidden wrapper for printing with header and footer
  const wrapper = document.createElement('div');
  wrapper.style.padding = '20px';
  wrapper.innerHTML = `
    <div style="text-align: center; font-size: 20px; font-weight: bold; color: #1e40af;">AI Fitness Plan</div>
    <div style="margin-top: 8px; font-size: 14px;">Generated for: ${userName} on ${generationDate}</div>
    <hr style="margin: 10px 0;" />
    ${element.innerHTML}
    <hr style="margin: 10px 0;" />
    <div style="text-align: center; font-size: 10px; color: #999;">Generated by HealthAI - Page <span class="pageNum"></span></div>
  `;

  document.body.appendChild(wrapper);

  doc.html(wrapper, {
    callback: (doc) => {
      doc.save('fitness-plan.pdf');
      document.body.removeChild(wrapper); // Clean up
    },
    margin: [20, 20, 20, 20],
    autoPaging: 'text',
    x: 10,
    y: 10,
    html2canvas: { scale: 0.57 }
  });
  };

  return (
    <div className='fitness-container'>
      <form onSubmit={handleGeneratePlan} className="fitplan-form">
        <h1 style={{
          color: 'white',
          fontWeight: 100,
        }}>Fill your details</h1>
        <div className='form-row form-selector'>
          <input
            type="text"
            name="age"
            placeholder="Age"
            value={formData.age}
            onChange={handleChange}
            required
          />

          <select
            name="gender"
            value={formData.gender}
            onChange={handleChange}
            required
          >
            <option value="">Select Gender</option>
            <option value="Male">Male</option>
            <option value="Female">Female</option>
            <option value="Other">Other</option>
          </select>
        </div>

        <div className='form-row form-selector'>
          <input
            type="text"
            name="height"
            placeholder="Height (in cm)"
            value={formData.height}
            onChange={handleChange}
            required
          />

          <input
            type="text"
            name="weight"
            placeholder="Weight (in kg)"
            value={formData.weight}
            onChange={handleChange}
            required
          />

        </div>

        <div className='form-row form-selector'>
          <select
            name="bodyType"
            value={formData.bodyType}
            onChange={handleChange}
            required
          >
            <option value="">Select Body Type</option>
            <option value="Ectomorph">Ectomorph</option>
            <option value="Mesomorph">Mesomorph</option>
            <option value="Endomorph">Endomorph</option>
          </select>

          <select
            name="dietType"
            value={formData.dietType}
            onChange={handleChange}
            required
          >
            <option value="">Select Diet Type</option>
            <option value="Vegan Diet">Vegan Diet</option>
            <option value="Vegetarian Diet">Vegetarian Diet</option>
            <option value="Gluten-Free Diet">Gluten-Free Diet</option>
            <option vlaue="Eggetarian Diet">Eggetarian Diet</option>
            <option vlaue="Non-vegetarien Diet">Non-vegetarien Diet</option>
          </select>
        </div>

        <div className='form-row goal-input' style={{ display: 'flex', alignItems: 'center', gap: '10px' }}>
          <input
            type='text'
            name="goal"
            id='fit-goal-id'
            value={formData.goal}
            onChange={handleChange}
            placeholder="What's your goal?"
            required
          />

          <button
            type="submit"
            id='goal-btn'
          >
            <FaArrowRight />
          </button>
        </div>
      </form>
      <div className='fit-plan'>
        {loading ?
        (<div className="loading-spinner">
            <span className="loader"></span>
          </div>):
          plan ? (
          <div style={{
            display: 'flex', flexDirection: 'column'
          }}>
            <h3 >Your Fitness Plan</h3>
            <span id="plan-preview" className='plan-content' style={{ color: 'white' }}><ReactMarkdown>{plan}</ReactMarkdown></span>
            <button
              onClick={handleDownloadPDF}
              className='download-btn'
            >
              Download as PDF
            </button>
          </div>
        ) :
          (
            <div
              style={{
                display:'flex',
                alignItems: 'center',
                justifyContent: 'center',
                height: '80vh'
              }}
            >
              <h2>Your plan will display here.</h2>
            </div>
          )
      }
      </div>
    </div>
  );
}
